package simu.framework;

import eduni.distributions.ContinuousGenerator;

/**
 * The ArrivalProcess class represents a process responsible for generating arrival events
 * in a simulation. It uses a continuous probability distribution generator to determine
 * the time until the next arrival event occurs.
 */
public class ArrivalProcess {
    private ContinuousGenerator generator;
    private EventList eventList;
    private IEventType type;

    /**
     * Constructs a new ArrivalProcess with the specified continuous generator,
     * event list, and event type.
     *
     * @param g    The continuous generator for determining the arrival times.
     * @param tl   The event list where generated arrival events will be added.
     * @param type The type of arrival event generated by this process.
     */
    public ArrivalProcess(ContinuousGenerator g, EventList tl, IEventType type) {
        this.generator = g;
        this.eventList = tl;
        this.type = type;
    }

    /**
     * Generates the next arrival event and adds it to the event list.
     * The arrival time is determined by sampling from the continuous generator.
     */
    public void generateNextEvent() {
        Event t = new Event(type, Clock.getInstance().getClock() + generator.sample());
        EventList.add(t);
    }
}
